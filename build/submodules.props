<Project>
  <ItemDefinitionGroup>
    <Repository>
      <Build>true</Build>

      <!--
        Specifies the ruleset used to determine if a repo should build in a patch update, or not.
        The default is ProductChangesOnly.

        Rulesets:
          ProductChangeOnly
            Only produce new package versions if there were changes to product code.
            Examples: this is the default. Most repos should use this policy.

          CascadeVersion
            Produce new package versions if there were changes to product code, or if one of the package dependencies has updated.
            Examples: metapackages which are not top-level, but should still be used to help users get the latest transitive set of dependencies

          AlwaysUpdate
            Packages should update in every patch.
            Examples: top-level metapackages and templates.

       -->
      <PatchPolicy>ProductChangesOnly</PatchPolicy>
      <RootPath></RootPath>
    </Repository>
    <ShippedRepository>
      <Build>false</Build>
      <PatchPolicy>ProductChangesOnly</PatchPolicy>
      <RootPath></RootPath>
    </ShippedRepository>
  </ItemDefinitionGroup>

  <PropertyGroup>
    <TestsRequiredTheSharedRuntime Condition="'$(RepositoryToBuild)' == 'Templating'">true</TestsRequiredTheSharedRuntime>
  </PropertyGroup>

  <ItemGroup>
    <Repository Include="AADIntegration" RootPath="$(RepositoryRoot)src\AADIntegration\" />
    <Repository Include="Antiforgery" RootPath="$(RepositoryRoot)src\Antiforgery\" />
    <Repository Include="AzureIntegration" RootPath="$(RepositoryRoot)src\AzureIntegration\" />
    <Repository Include="BasicMiddleware" />
    <Repository Include="Components" RootPath="$(RepositoryRoot)src\Components\" />
    <Repository Include="CORS" RootPath="$(RepositoryRoot)src\CORS\" />
    <Repository Include="HttpSysServer" RootPath="$(RepositoryRoot)src\HttpSysServer\" />
    <Repository Include="Identity" />
    <Repository Include="IISIntegration" RootPath="$(RepositoryRoot)src\IISIntegration\" />
    <Repository Include="JavaScriptServices" RootPath="$(RepositoryRoot)src\JavaScriptServices\" />
    <Repository Include="Localization" />
    <Repository Include="MetaPackages" RootPath="$(RepositoryRoot)src\MetaPackages\" PatchPolicy="CascadeVersions" />
    <Repository Include="Mvc" RootPath="$(RepositoryRoot)src\Mvc\" />
    <Repository Include="Razor" RootPath="$(RepositoryRoot)src\Razor\" />
    <Repository Include="ResponseCaching" RootPath="$(RepositoryRoot)src\ResponseCaching\" />
    <Repository Include="Routing" RootPath="$(RepositoryRoot)src\Routing\" />
    <Repository Include="Security" RootPath="$(RepositoryRoot)src\Security\" />
    <Repository Include="Session" RootPath="$(RepositoryRoot)src\Session\" />
    <Repository Include="SignalR" RootPath="$(RepositoryRoot)src\SignalR\" />
    <Repository Include="StaticFiles" RootPath="$(RepositoryRoot)src\StaticFiles\" />
    <Repository Include="Templating" RootPath="$(RepositoryRoot)src\Templating\" PatchPolicy="AlwaysUpdateAndCascadeVersions" />

    <!-- Test-only repos -->
    <Repository Include="AuthSamples" RootPath="$(RepositoryRoot)src\AuthSamples\" PatchPolicy="AlwaysUpdateAndCascadeVersions" />
    <Repository Include="MusicStore"  RootPath="$(RepositoryRoot)src\MusicStore\" PatchPolicy="AlwaysUpdateAndCascadeVersions" />
    <Repository Include="ServerTests" RootPath="$(RepositoryRoot)src\ServerTests\" PatchPolicy="AlwaysUpdateAndCascadeVersions" />
  </ItemGroup>
</Project>
